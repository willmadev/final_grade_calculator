/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as SettingsIndexImport } from './routes/settings/index'
import { Route as CourseLayoutImport } from './routes/course/_layout'
import { Route as AuthRegisterImport } from './routes/auth/register'
import { Route as AuthLoginImport } from './routes/auth/login'
import { Route as CourseLayoutIndexImport } from './routes/course/_layout.index'
import { Route as CourseLayoutCourseIdImport } from './routes/course/_layout.$courseId'

// Create Virtual Routes

const CourseImport = createFileRoute('/course')()

// Create/Update Routes

const CourseRoute = CourseImport.update({
  path: '/course',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SettingsIndexRoute = SettingsIndexImport.update({
  path: '/settings/',
  getParentRoute: () => rootRoute,
} as any)

const CourseLayoutRoute = CourseLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => CourseRoute,
} as any)

const AuthRegisterRoute = AuthRegisterImport.update({
  path: '/auth/register',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any)

const CourseLayoutIndexRoute = CourseLayoutIndexImport.update({
  path: '/',
  getParentRoute: () => CourseLayoutRoute,
} as any)

const CourseLayoutCourseIdRoute = CourseLayoutCourseIdImport.update({
  path: '/$courseId',
  getParentRoute: () => CourseLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterImport
      parentRoute: typeof rootRoute
    }
    '/course': {
      id: '/course'
      path: '/course'
      fullPath: '/course'
      preLoaderRoute: typeof CourseImport
      parentRoute: typeof rootRoute
    }
    '/course/_layout': {
      id: '/course/_layout'
      path: '/course'
      fullPath: '/course'
      preLoaderRoute: typeof CourseLayoutImport
      parentRoute: typeof CourseRoute
    }
    '/settings/': {
      id: '/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsIndexImport
      parentRoute: typeof rootRoute
    }
    '/course/_layout/$courseId': {
      id: '/course/_layout/$courseId'
      path: '/$courseId'
      fullPath: '/course/$courseId'
      preLoaderRoute: typeof CourseLayoutCourseIdImport
      parentRoute: typeof CourseLayoutImport
    }
    '/course/_layout/': {
      id: '/course/_layout/'
      path: '/'
      fullPath: '/course/'
      preLoaderRoute: typeof CourseLayoutIndexImport
      parentRoute: typeof CourseLayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AuthLoginRoute,
  AuthRegisterRoute,
  CourseRoute: CourseRoute.addChildren({
    CourseLayoutRoute: CourseLayoutRoute.addChildren({
      CourseLayoutCourseIdRoute,
      CourseLayoutIndexRoute,
    }),
  }),
  SettingsIndexRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth/login",
        "/auth/register",
        "/course",
        "/settings/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/auth/login": {
      "filePath": "auth/login.tsx"
    },
    "/auth/register": {
      "filePath": "auth/register.tsx"
    },
    "/course": {
      "filePath": "course",
      "children": [
        "/course/_layout"
      ]
    },
    "/course/_layout": {
      "filePath": "course/_layout.tsx",
      "parent": "/course",
      "children": [
        "/course/_layout/$courseId",
        "/course/_layout/"
      ]
    },
    "/settings/": {
      "filePath": "settings/index.tsx"
    },
    "/course/_layout/$courseId": {
      "filePath": "course/_layout.$courseId.tsx",
      "parent": "/course/_layout"
    },
    "/course/_layout/": {
      "filePath": "course/_layout.index.tsx",
      "parent": "/course/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
