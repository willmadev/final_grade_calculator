// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int       @id @default(autoincrement())
  email         String    @unique
  emailVerified Boolean   @default(false)
  password      String
  sessions      Session[]
  courses       Course[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt()
}

model Session {
  id        String   @id @default(uuid())
  User      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
}

model Course {
  id          Int          @id @default(autoincrement())
  name        String
  archived    Boolean
  user        User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
  assignments Assignment[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt()
}

model Assignment {
  id        Int      @id @default(autoincrement())
  name      String
  worth     Float
  grade     Float
  course    Course   @relation(fields: [courseId], references: [id], onDelete: Cascade)
  courseId  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
}
